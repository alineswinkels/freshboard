'use strict';

var _ = require('lodash'),
    glob = require('glob'),
    path = require('path'),
    env = _.defaults(require('gulp-util').env, { env: 'dev' });

var bundles = {};
var apps = {};

var resolveImports = function(config) {
    var imports = config.imports;

    config.imports = null;
    config.importsResolved = true;

    if (!_.isArray(imports) || imports.length == 0) {
        return config;
    }

    _.forEach(imports, function(name) {
        if (name in bundles) {
            if (! bundles[name].importsResolved) {
                bundles[name] = resolveImports(bundles[name]);
            }
            config = _.merge(config, bundles[name], function(a, b) {
                if (_.isArray(a)) {
                    return a.concat(b);
                }
            });
        }
    });

    return config;
};

_.forEach(glob.sync('@(vendor|src)/**/*@(B|b)undle/Resources/public/assets/gulp.config.js'), function(configFile) {
    var absPath = path.resolve(process.cwd(), configFile);
    var bundle = path.basename(glob.sync(configFile.replace('Resources/public/assets/gulp.config.js', '*Bundle.php'))[0], '.php');
    var name = bundle.toLowerCase().replace(/bundle$/, '');

    bundles[name] = _.merge(require(absPath), {
        basePath: path.dirname(absPath)
    });
});

_.forEach(glob.sync('web/assets/*/gulp.config.js'), function(configFile) {
    var absPath = path.resolve(process.cwd(), configFile);
    var name = configFile.match(/([^\/]+)\/gulp.config.js$/)[1];
    var config = require(absPath)[env.env];

    apps[name] = _.merge(resolveImports(config), {
        basePath: path.dirname(absPath)
    });
});

module.exports.bundles = bundles;
module.exports.apps = apps;
