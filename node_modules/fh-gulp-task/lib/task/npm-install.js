'use strict';

var _ = require('lodash'),
    config = require('../config'),
    fs = require('fs'),
    spawn = require('child_process').spawn,
    path = require('path'),
    Q = require('q'),
    gutil = require('gulp-util');

module.exports.task = function() {
    return Q.all(_.map(_.merge(config.bundles, config.apps), function(app) {
        return npmInstall(app);
    }));
};

var npmInstall = function(app) {
    var deferred = Q.defer();

    fs.exists(path.join(app.basePath, 'package.json'), function(exists) {
        if (!exists) {
            deferred.resolve();
            return;
        }

        var options = { cwd: app.basePath, stdio: 'inherit' };
        var npm = spawn('npm', ['update'], options);

        npm.on('close', function (code) {
            if (code > 0) {
                deferred.reject(new Error('npm process exited with code ' + code));
            } else {
                deferred.resolve();
            }
        });
    });

    return deferred.promise;
};
