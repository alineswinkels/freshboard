'use strict';

var _ = require('lodash'),
    bower = require('bower'),
    config = require('../config'),
    fs = require('fs'),
    gutil = require('gulp-util'),
    path = require('path'),
    Q = require('q');

module.exports.task = function() {
    return Q.all(_.map(_.merge(config.bundles, config.apps), function(app) {
        return bowerInstall(app);
    }));
};

var bowerInstall = function(app) {
    var deferred = Q.defer();

    fs.exists(path.join(app.basePath, 'bower.json'), function(exists) {
        if (!exists) {
            deferred.resolve();
            return;
        }

        bower.commands.update([], {}, { cwd: app.basePath })
            .on('error', function(err) {
                gutil.log(gutil.colors.red(err.toString()));
            })
            .on('end', function(installed) {
                _.forEach(installed, function(pkg) {
                    gutil.log(
                        'Bower installed/updated package ' + gutil.colors.magenta(pkg.pkgMeta.name + '#' + pkg.pkgMeta.version)
                    );
                });

                deferred.resolve();
            });
    });

    return deferred.promise;
};
